<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shaw.mapper.VisitorMapper">
  <resultMap id="BaseResultMap" type="com.shaw.bo.Visitor">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="third_id" jdbcType="VARCHAR" property="thirdId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="oauth_from" jdbcType="INTEGER" property="oauthFrom" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.shaw.bo.Visitor">
    <result column="more_info" jdbcType="LONGVARCHAR" property="moreInfo" />
  </resultMap>
  <sql id="Base_Column_List">
    id, account, name, third_id, email, oauth_from, avatar_url, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    more_info
  </sql>
  <select id="selectByAccountAndFrom" resultType="com.shaw.bo.Visitor" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    from visitor
    where account = #{account,jdbcType=INTEGER}
    and oauth_from=#{oauthFrom}
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from visitor
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from visitor
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shaw.bo.Visitor" useGeneratedKeys="true">
    insert into visitor (id, account, name, 
      third_id, email, oauth_from, 
      avatar_url, create_time, update_time, 
      more_info)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{thirdId,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{oauthFrom,jdbcType=INTEGER}, 
      #{avatarUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, 
      #{moreInfo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shaw.bo.Visitor">
    insert into visitor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="thirdId != null">
        third_id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="oauthFrom != null">
        oauth_from,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="moreInfo != null">
        more_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="thirdId != null">
        #{thirdId,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="oauthFrom != null">
        #{oauthFrom,jdbcType=INTEGER},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="moreInfo != null">
        #{moreInfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shaw.bo.Visitor">
    update visitor
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="thirdId != null">
        third_id = #{thirdId,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="oauthFrom != null">
        oauth_from = #{oauthFrom,jdbcType=INTEGER},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="moreInfo != null">
        more_info = #{moreInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.shaw.bo.Visitor">
    update visitor
    set account = #{account,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      third_id = #{thirdId,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      oauth_from = #{oauthFrom,jdbcType=INTEGER},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      more_info = #{moreInfo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shaw.bo.Visitor">
    update visitor
    set account = #{account,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      third_id = #{thirdId,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      oauth_from = #{oauthFrom,jdbcType=INTEGER},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>